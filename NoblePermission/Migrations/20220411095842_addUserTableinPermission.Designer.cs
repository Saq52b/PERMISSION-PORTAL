// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoblePermission.Persistance;

namespace NoblePermission.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220411095842_addUserTableinPermission")]
    partial class addUserTableinPermission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NoblePermission.Persistance.Entities.NobleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NobleGroups");
                });

            modelBuilder.Entity("NoblePermission.Persistance.Entities.NobleModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NobleModules");
                });

            modelBuilder.Entity("NoblePermission.Persistance.Entities.NoblePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NobleGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NobleModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NobleGroupId");

                    b.HasIndex("NobleModuleId");

                    b.ToTable("NoblePermissions");
                });

            modelBuilder.Entity("NoblePermission.Persistance.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f8d5614-2c7e-4ec0-868c-d254e6516b4d"),
                            Email = "permission@gmail.com",
                            Password = "$2a$11$GAaVfMy6fmzhyIzkMlKy8OXkleFnRnpgUFGtEGj9vYNe2moIWqU2y",
                            UserName = "Permission"
                        });
                });

            modelBuilder.Entity("NoblePermission.Persistance.Entities.NoblePermission", b =>
                {
                    b.HasOne("NoblePermission.Persistance.Entities.NobleGroup", "NobleGroup")
                        .WithMany("NoblePermissions")
                        .HasForeignKey("NobleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoblePermission.Persistance.Entities.NobleModule", "NobleModule")
                        .WithMany("NoblePermissions")
                        .HasForeignKey("NobleModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
